"""
Package: service
Package for the application models and service routes
This module creates and configures the Flask app and sets up the logging
and mongoDB database
"""
import os
import sys
import logging
from flask import Flask

# Get configuration from environment
DATABASE_URI = os.getenv('DATABASE_URI', 'mongodb://localhost')
SECRET_KEY = os.getenv('SECRET_KEY', 's3cr3t-key-shhhh')

# Create Flask application
app = Flask(__name__)
# app.config['MONGODB_SETTINGS'] = {'host': DATABASE_URI}
app.config['SECRET_KEY'] = SECRET_KEY
app.config['API_KEY'] = os.getenv('API_KEY')
app.config['MONGODB_SETTINGS'] = {
    'db': 'myDatabase',
    'host': '127.0.0.1',
    'port': 27017
}

# Import the rutes After the Flask app is created
from service import service, models

# Set up logging for production
# service.initialize_logging()

app.logger.info(70 * '*')
app.logger.info(
    '  S U P P L I E R S   S E R V I C E   R U N N I N G  '.center(
        70, '*'))
app.logger.info(70 * '*')

try:
    service.init_db()
except Exception as error:
    app.logger.critical('%s: Cannot continue', error)
    # gunicorn requires exit code 4 to stop spawning workers when they die
    sys.exit(4)

app.logger.info('Service inititalized!')

if not app.config['API_KEY']:
    app.config['API_KEY'] = service.generate_apikey()
    app.logger.info('Missing API Key! Autogenerated: {}'.format(app.config['API_KEY']))
